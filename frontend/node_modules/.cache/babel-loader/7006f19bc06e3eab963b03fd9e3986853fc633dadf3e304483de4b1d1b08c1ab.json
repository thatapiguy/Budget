{"ast":null,"code":"// Make sure this IP matches your server's IP address\nconst API_URL = 'http://192.168.68.88:3001/api'; // Use localhost for local network access\n\n// Transactions API\nexport const transactionsApi = {\n  getAll: async () => {\n    const response = await fetch(`${API_URL}/transactions`);\n    return response.json();\n  },\n  create: async data => {\n    const response = await fetch(`${API_URL}/transactions`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  },\n  update: async (id, data) => {\n    const response = await fetch(`${API_URL}/transactions/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  },\n  delete: async id => {\n    const response = await fetch(`${API_URL}/transactions/${id}`, {\n      method: 'DELETE'\n    });\n    return response.json();\n  }\n};\n\n// Budgets API\nexport const budgetsApi = {\n  getAll: async () => {\n    const response = await fetch(`${API_URL}/budgets`);\n    return response.json();\n  },\n  create: async data => {\n    const response = await fetch(`${API_URL}/budgets`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  },\n  update: async (id, data) => {\n    const response = await fetch(`${API_URL}/budgets/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  }\n};\n\n// Add accounts API\nexport const accountsApi = {\n  getAll: async () => {\n    const response = await fetch(`${API_URL}/accounts`);\n    return response.json();\n  },\n  create: async data => {\n    const response = await fetch(`${API_URL}/accounts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  },\n  updateBalance: async (id, current_balance) => {\n    const response = await fetch(`${API_URL}/accounts/${id}/balance`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        current_balance\n      })\n    });\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","transactionsApi","getAll","response","fetch","json","create","data","method","headers","body","JSON","stringify","update","id","delete","budgetsApi","accountsApi","updateBalance","current_balance"],"sources":["/Users/thatapiguy/Budget/frontend/src/services/api.ts"],"sourcesContent":["// Make sure this IP matches your server's IP address\nconst API_URL = 'http://192.168.68.88:3001/api';  // Use localhost for local network access\n\nexport interface TransactionData {\n  account_id: number;  // Add this field\n  category: string;\n  amount: number;\n  date: string;\n  description: string;\n}\n\nexport interface BudgetData {\n  id?: number;\n  category: string;\n  amount: number;\n  period: 'monthly' | 'annual';\n  year?: number;\n}\n\nexport interface AccountData {\n  id?: number;\n  name: string;\n  type: string;\n  starting_balance: number;\n  current_balance: number;\n}\n\n// Transactions API\nexport const transactionsApi = {\n  getAll: async () => {\n    const response = await fetch(`${API_URL}/transactions`);\n    return response.json();\n  },\n\n  create: async (data: TransactionData) => {\n    const response = await fetch(`${API_URL}/transactions`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  },\n\n  update: async (id: number, data: TransactionData) => {\n    const response = await fetch(`${API_URL}/transactions/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  },\n\n  delete: async (id: number) => {\n    const response = await fetch(`${API_URL}/transactions/${id}`, {\n      method: 'DELETE',\n    });\n    return response.json();\n  },\n};\n\n// Budgets API\nexport const budgetsApi = {\n  getAll: async (): Promise<BudgetData[]> => {\n    const response = await fetch(`${API_URL}/budgets`);\n    return response.json();\n  },\n\n  create: async (data: BudgetData) => {\n    const response = await fetch(`${API_URL}/budgets`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  },\n\n  update: async (id: number, data: BudgetData) => {\n    const response = await fetch(`${API_URL}/budgets/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  },\n};\n\n// Add accounts API\nexport const accountsApi = {\n  getAll: async (): Promise<AccountData[]> => {\n    const response = await fetch(`${API_URL}/accounts`);\n    return response.json();\n  },\n\n  create: async (data: Omit<AccountData, 'id' | 'current_balance'>) => {\n    const response = await fetch(`${API_URL}/accounts`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data),\n    });\n    return response.json();\n  },\n\n  updateBalance: async (id: number, current_balance: number) => {\n    const response = await fetch(`${API_URL}/accounts/${id}/balance`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ current_balance }),\n    });\n    return response.json();\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}